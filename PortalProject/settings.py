"""
Django settings for PortalProject project.

Generated by 'django-admin startproject' using Django 3.2.25.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from dotenv import load_dotenv
from pathlib import Path
import os
import dj_database_url


import pymysql
pymysql.install_as_MySQLdb()



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!f+85b52#7g0uz&3n$=qcrhie-4^7y4*fwb&_5p=w$4-#ucrjj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['*']


# Load environment variables from .env file
load_dotenv()



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'UserEntry',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', 
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


ROOT_URLCONF = 'PortalProject.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'PortalProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# Added POSTGRESQL

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'TEST',               # Database name you created
#         'USER': 'root',              # MySQL username
#         'PASSWORD': 'TANAYKUMAR',          # MySQL password
#         'HOST': 'localhost',                # Typically 'localhost'
#         'PORT': '3306',                     # Default MySQL port
#     }
# }
# Check if DATABASE_URL is available
DATABASES = {
    'default': dj_database_url.config(default=os.getenv("DATABASE_URL"))
}

# Ensure psycopg2 is installed
try:
    import psycopg2
except ImportError:
    raise ImportError("psycopg2 is required for PostgreSQL database connection.")
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# Base static URL for accessing static files
STATIC_URL = '/static/'

# Path to collect static files for production
STATIC_ROOT = BASE_DIR / "collected_static"  # This creates a "collected_static" folder at the root of your project

# Path(s) where Django will search for static files during development
STATICFILES_DIRS = [
    BASE_DIR / "static",  # This points to the "static" folder in your project
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Load environment variables from .env file
load_dotenv()


# Retrieve SMTP credentials from environment variables
# SMTP_USERNAME = os.getenv('SMTP_USERNAME')
# SMTP_PASSWORD = os.getenv('SMTP_PASSWORD')


# Email configuration
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Updated to match Brevo's SMTP host
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'satyamkumarjha9949@gmail.com'
EMAIL_HOST_PASSWORD = 'eqfo rast zfzy vvhq'


# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.lvpei.org'  # Replace with your SMTP server
# EMAIL_PORT = 587  # Use 587 for TLS or 465 for SSL
# EMAIL_USE_TLS = True  # Set True for TLS; use EMAIL_USE_SSL = True for SSL
# EMAIL_HOST_USER = 'biostatistics@lvpei.org'  # Your email address
# EMAIL_HOST_PASSWORD = 'init/2024'  # Your email account password
# DEFAULT_FROM_EMAIL = 'biostatistics@lvpei.org'


CSRF_TRUSTED_ORIGINS = [
    'https://registrationform-cafjecgvahbzebd8.southindia-01.azurewebsites.net'
]


CSRF_COOKIE_SECURE = True 

ALLOWED_HOSTS = ['*']